import static org.apache.tools.ant.taskdefs.condition.Os.FAMILY_MAC
import static org.apache.tools.ant.taskdefs.condition.Os.isFamily

ext {
    osClassifier = isFamily(FAMILY_MAC) ? "osx" : "linux"
}

// We locally-codegen verification-api.conjure.json into these source-sets
sourceSets {
    generatedObjects
    generatedJersey
    generatedRetrofit
}

configurations {
    testCases
    verificationApi
    verifier
    generator
}


dependencies {
    generator 'com.palantir.conjure.java:conjure-java'

    generatedObjectsImplementation 'com.palantir.conjure.java:conjure-lib'
    generatedJerseyImplementation 'com.palantir.conjure.java:conjure-lib'
    generatedJerseyImplementation 'jakarta.ws.rs:jakarta.ws.rs-api'
    generatedJerseyImplementation sourceSets.generatedObjects.output
    generatedRetrofitImplementation 'com.google.guava:guava'
    generatedRetrofitImplementation 'com.palantir.conjure.java:conjure-lib'
    generatedRetrofitImplementation 'com.squareup.retrofit2:retrofit'
    generatedRetrofitImplementation sourceSets.generatedObjects.output

    testImplementation 'com.palantir.conjure.java:conjure-lib'
    testImplementation sourceSets.generatedObjects.output
    testImplementation sourceSets.generatedJersey.output
    testImplementation sourceSets.generatedRetrofit.output
}

tasks.withType(JavaCompile).matching { it.name == "compileTestJava" }.configureEach {
    options.errorprone.disable 'Slf4jLogsafeArgs'
}

idea {
    module {
        sourceDirs += sourceSets.generatedObjects.java.srcDirs
        sourceDirs += sourceSets.generatedJersey.java.srcDirs
        sourceDirs += sourceSets.generatedRetrofit.java.srcDirs
        generatedSourceDirs += sourceSets.generatedObjects.java.srcDirs
        generatedSourceDirs += sourceSets.generatedJersey.java.srcDirs
        generatedSourceDirs += sourceSets.generatedRetrofit.java.srcDirs
        scopes.COMPILE.plus += [
            configurations.generatedObjectsCompileClasspath,
            configurations.generatedJerseyCompileClasspath,
            configurations.generatedRetrofitCompileClasspath]
    }
}

task unpackVerifier(type: Sync) {
    from { tarTree(configurations.verifier.singleFile) }
    into "${buildDir}/verification"
    rename { "verifier" }
}

task unpackGenerator(type: Sync) {
    from { tarTree(configurations.generator.singleFile) }
    into "${buildDir}/generator"
    ext.getExecutable = {
        fileTree("${buildDir}/generator/${configurations.generator.singleFile.name.replace('.tgz', '')}/bin")
            .filter({ !it.name.contains('.bat') })
            .singleFile
    }
}

task copyTestCases(type: Sync) {
    from configurations.testCases, {
        rename { "test-cases.json" }
    }
    from configurations.verificationApi, {
        rename { "verification-api.json" }
    }
    into "$buildDir/test-cases"
}

task conjureJavaObjects(type: Exec, dependsOn: unpackGenerator) {
    executable "${-> unpackGenerator.getExecutable()}"
    args 'generate',  "${-> configurations.verificationApi.singleFile}", 'src/generatedObjects/java', '--objects', '--useImmutableBytes'

    inputs.file "${-> configurations.verificationApi.singleFile}"
    outputs.dir "src/generatedObjects/java"
    doFirst { delete "src/generatedObjects/java/*" }
}

task conjureJavaJersey(type: Exec, dependsOn: unpackGenerator) {
    executable "${-> unpackGenerator.getExecutable()}"
    args 'generate',  "${-> configurations.verificationApi.singleFile}", 'src/generatedJersey/java', '--jersey'

    inputs.file "${-> configurations.verificationApi.singleFile}"
    outputs.dir "src/generatedJersey/java"
    doFirst { delete "src/generatedJersey/java/*" }
}

task conjureJavaRetrofit(type: Exec, dependsOn: unpackGenerator) {
    executable "${-> unpackGenerator.getExecutable()}"
    args 'generate',  "${-> configurations.verificationApi.singleFile}", 'src/generatedRetrofit/java', '--retrofit', '--retrofitListenableFutures'

    inputs.file "${-> configurations.verificationApi.singleFile}"
    outputs.dir "src/generatedRetrofit/java"
    doFirst { delete "src/generatedRetrofit/java/*" }
}

// ensure compiling the sourceSet automatically run these tasks
compileGeneratedObjectsJava.dependsOn conjureJavaObjects
compileGeneratedJerseyJava.dependsOn conjureJavaJersey
compileGeneratedRetrofitJava.dependsOn conjureJavaRetrofit

tasks.idea.dependsOn conjureJavaObjects, conjureJavaJersey, conjureJavaRetrofit, unpackVerifier, copyTestCases
test.dependsOn unpackVerifier, copyTestCases

checkstyleGeneratedObjects.enabled = false
checkstyleGeneratedJersey.enabled = false
checkstyleGeneratedRetrofit.enabled = false
