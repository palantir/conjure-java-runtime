apply plugin: 'com.github.johnrengelman.shadow'
apply from: "${rootDir}/gradle/publish-shadow.gradle"

dependencies {
    compile project(":extras:jackson-support")
    compile project(":error-handling")
    compile project(":tracing-okhttp3")
    compile project(":http-clients-api")
    compile project(":service-config")

    compile "com.google.code.findbugs:jsr305"
    compile "com.google.guava:guava"
    compile "com.netflix.feign:feign-jackson"
    compile("com.netflix.feign:feign-jaxrs") {
        // the shipped version clashes with the newer javax.ws.rs:javax.ws.rs-api used by (e.g.) dropwizard
        exclude group: "javax.ws.rs", module: "jsr311-api"
    }
    compile "com.netflix.feign:feign-okhttp"
    compile "javax.ws.rs:javax.ws.rs-api"
    compile "org.slf4j:slf4j-api"
    compile "com.netflix.feign:feign-slf4j"

    testCompile project(":jersey-servers")
    testCompile "com.squareup.okhttp3:mockwebserver"
    testCompile "io.dropwizard:dropwizard-testing"
    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-all"

    // Keep in sync with the dependencies excluded from shadowJar.
    shadow project(':error-handling')
    shadow project(':service-config')
    shadow project(':ssl-config')
    shadow project(":tracing-okhttp3")
    shadow "javax.ws.rs:javax.ws.rs-api"
    shadow "com.fasterxml.jackson.core:jackson-databind"
    shadow "com.fasterxml.jackson.datatype:jackson-datatype-guava"
    shadow "com.google.guava:guava"
    shadow "com.squareup.okhttp3:okhttp"
    shadow "org.slf4j:slf4j-api"
}

shadowJar {
    mergeServiceFiles()
    // relocate('com.palantir.remoting1.tracing', 'httpremoting.shaded.com.palantir.remoting1.tracing')
    relocate('feign', 'httpremoting.shaded.feign')
    relocate('zipkin', 'httpremoting.shaded.zipkin')
    relocate('org.joda.time', 'httpremoting.shaded.org.joda.time')
    relocate('okio', 'httpremoting.shaded.okio')
    dependencies {
        exclude(project(':error-handling'))
        exclude(project(':service-config'))
        exclude(project(':ssl-config'))
        exclude(project(':tracing'))
        exclude(project(':tracing-okhttp3'))
        exclude(dependency { it.moduleGroup.contains("javax.ws.rs") })
        exclude(dependency { it.moduleGroup.contains("com.fasterxml.jackson") })
        exclude(dependency { it.moduleGroup.contains("com.google.guava") })
        exclude(dependency { it.moduleGroup.contains("com.squareup.okhttp3") })
        exclude(dependency { it.moduleGroup.contains("org.slf4j") })
    }
    classifier = ''
}

tasks.shadowJar {
    from('licenses/') {
        into 'META-INF/LICENSES'
    }
}

task checkLicenseInformation(dependsOn: 'shadowJar') << {
    def jar = zipTree(tasks.shadowJar.archivePath)
    def licenseFiles = jar.matching { include 'META-INF/LICENSES/*' }
    if (licenseFiles.files.size() != 5) {
        throw new GradleException("Expected 5 META-INF/LICENSES/* files in shadowJar, found: " + licenseFiles.files)
    }
}
check.dependsOn checkLicenseInformation
